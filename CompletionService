A service that decouples the production of new asynchronous tasks from the consumption of completed tasks.Producers submit tasks for execution.Comsumers take completed tasks and process their results in the order they complete.A CompletionService can for  example be used to manage asynchronous I/O , in which tasks that perform reads are submitted in one part of a program or system, and then acted upon in a different part of the program when the reads complete, possibly in a different order than they were requested.

Typically, a CompletionService relies on a separate Executor to actually execute the tasks, in which case the CompletionService only manages an internal completion queue,The ExecutorCompletionService class provides an implementation of this approach.

Memory consistency effects: Actions in a thread prior to submitting a task to CompletionService happen-before actions taken by that task,which in turn happen-before actions following a successful return from the corresponding take().

CompletionService only has one implementing class:ExecutorCompletionService,can solve the weakness of future

ExecutorCompletionService
	Constructors
		ExecutorCompletionService(Executor executor)
			Creates an ExecutorCompletionService using the supplies executor for base task execution  and a LinkedBlockingQueue as a completion queue.
		ExecutorCompletionService(Executor executor,BlockingQueue<Future<V>> completionQueue)
			Creates an ExecutorCoempletionService using the supplied executor for base task execution and the  supplies queue as its completion queue.


	Instance Methods
		take( )
			Retrieves and removes the Future representing the next completed task waiting if none are yet present

			返回最先完成任务的Future对象。

		poll()
			Retrieves and remvoes the Future representing the next completed task ,or null if none are present,without blocking.
		poll(long timeout,TimeUnit unit)
			Retrieves and removes the Future representing the next completed task ,waiting if necessary up to the specified wait time if none are yet present